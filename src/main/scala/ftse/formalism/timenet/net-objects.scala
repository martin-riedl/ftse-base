// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package ftse.formalism.timenet

trait Type

object Type {
  def fromString(value: String): Type = value match {
    case "node" => Node
    case "connector" => Connector
    case "text" => Text
    case "inscriptionText" => InscriptionText

  }
}

case object Node extends Type { override def toString = "node" }
case object Connector extends Type { override def toString = "connector" }
case object Text extends Type { override def toString = "text" }
case object InscriptionText extends Type { override def toString = "inscriptionText" }


trait NetTypable {
  val id: String
  val netclass: String
}


case class NetType(id: String,
  netclass: String) extends NetTypable


trait NodeTypable {
  val graphics: ftse.formalism.timenet.GraphicsType
  val id: String
  val typeValue: ftse.formalism.timenet.Type
}


case class NodeType(graphics: ftse.formalism.timenet.GraphicsType,
  id: String,
  typeValue: ftse.formalism.timenet.Type) extends NodeTypable


case class HandleType(graphics: ftse.formalism.timenet.GraphicsType,
  id: String)


trait ConnectorTypable {
  val fromNode: String
  val toNode: String
  val id: String
  val typeValue: ftse.formalism.timenet.Type
}


case class ConnectorType(fromNode: String,
  toNode: String,
  id: String,
  typeValue: ftse.formalism.timenet.Type) extends ConnectorTypable


trait TextTypable {
  val graphics: ftse.formalism.timenet.GraphicsType
  val typeValue: ftse.formalism.timenet.Type
  val id: String
}


case class TextType(graphics: ftse.formalism.timenet.GraphicsType,
  typeValue: ftse.formalism.timenet.Type,
  id: String) extends TextTypable


trait InscriptionTextTypable {
  val graphics: ftse.formalism.timenet.GraphicsType
  val typeValue: ftse.formalism.timenet.Type
  val id: String
}


case class InscriptionTextType(graphics: ftse.formalism.timenet.GraphicsType,
  typeValue: ftse.formalism.timenet.Type,
  id: String) extends InscriptionTextTypable


case class GraphicsType(x: BigInt,
  y: BigInt,
  orientation: BigInt)

